/*
    Base style for overlay (modal popup and nag behavior)
*/

/* Prevent user from scrolling the overlay off the screen*/
body {
    overflow: hidden;
}


/*Sets the black-out styling behind the modal popup*/
.syncronex-wall-overlay {
    visibility: visible;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 2147483645;
    background-color: #313131;
    opacity: .95;
    filter: alpha(opacity=95);
}

/* provides the centering container for the actual modal */
.syncronex-wall-overlay-container {
    visibility: visible;
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: 2147483646;
        overflow-y: scroll; /* allow the overlay to be scrolled if it's too big for screen */
}

/* Styles the actual modal */
.syncronex-wall-overlay-content {
    visibility: visible;
    position: absolute;
    top: 2%;
    left: 5%;
    width: 90%;
    background-color: #fff;
    padding:10px;
    z-index: 2147483647;
    box-sizing: border-box;
}

.syncronex-warning-overlay {
    visibility: visible;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 2147483647;
    background-color: #313131;
    opacity: .95;
    filter: alpha(opacity=95);
}

.syncronex-warning-overlay-container {
    visibility: visible;
    position: absolute;
    left: 0;top: 0;width: 100%;height: 100%;
    z-index: 2147483647;
}

.syncronex-inline-overlay-content{
    height:100%;
    width:100%;
    padding:10px;
}


.sync-underline {
    text-decoration: underline;
}

.sync-pm-shadow {
    box-shadow: none;
}

.syncronex-warning-overlay-content {
    background-color: #FFFFFF;
    z-index: 2147483647;
}

/* Base 'close' button for alerts*/
a.sync-box-close {
    float:right;
    margin-top: 0;
    margin-right:0;
    cursor:pointer;
    color: #fff;
    border: 2px solid #AEAEAE;
    border-radius: 30px;
    background-color: #333333;
    font-size: 25px;
    font-weight: bold;
    display: inline-block;
    line-height: 0;
    padding: 11px 3px;           
}

a.sync-box-close:before {
    content: "\00d7"; /* &times; */
}

a.sync-box-close:hover{
    text-decoration:none;
}


/* 
    general support for the 'toggling' 
    use a checkbox input type with class='sync-toggle'
    followed immediately by a block element with class='sync-toggle-content'
    then a <label> for the checkbox that is styled to look like a button, link, etc
    to trigger the toggle.
*/

/* Content hidden until user clicks */
.sync-toggle-content{
    display:none;
}
.sync-toggle label {
    cursor: pointer;
}
input[type=checkbox].sync-toggle {
    display:none;
}
/* display hiddent content if checkbox is checked*/
input[type=checkbox].sync-toggle:checked + .sync-toggle-content {
  display: block;
}
/* optional: use this to hide the toggler (button, etc.)*/
input[type=checkbox].sync-toggle:checked ~ .sync-toggle-off {
  display: none;
}


@media (min-height: 640px) and (min-width: 640px) {
    .syncronex-warning-overlay {
        display: none;
    }

    .syncronex-warning-overlay-container {
        position: fixed;
        left: 5px;
        top: 50%;
        width: auto;
        height: auto;
        transform: none;
    }

    .syncronex-warning-overlay-content{
        box-shadow: 5px 5px 5px #333333;
    }

    a.sync-box-close {
        margin-top: -12px;
        margin-right: -12px;
    }
}

@media (min-width: 992px) {
    .syncronex-wall-overlay-content {
        top:50%;
        left: 50%;
        width: auto;
        transform: translate(-50%,-50%);
    }

}